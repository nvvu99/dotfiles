" vim: filetype=vim :
" Sample configuration file for vifm (last updated: 27 Jun, 2013)
" You can edit this file by hand.
" The " character at the beginning of a line comments out the line.
" Blank lines are ignored.
" The basic format for each item is shown with an example.

" This is the actual command used to start vi.  The default is vim.
" If you would like to use another vi clone such Elvis or Vile
" you will need to change this setting.

set vicmd=nvim
" set vicmd=elvis\ -G\ termcap
" set vicmd=vile

" Trash Directory
" The default is to move files that are deleted with dd or :d to
" the trash directory.  If you change this you will not be able to move
" files by deleting them and then using p to put the file in the new location.
" I recommend not changing this until you are familiar with vifm.
" This probably shouldn't be an option.

set trash

" This is how many directories to store in the directory history.

set history=100

" Follow links on l or Enter.

set followlinks

" With this option turned on you can run partially entered commands with
" unambiguous beginning using :! (e.g. :!Te instead of :!Terminal or :!Te<tab>).

set fastrun

" Natural sort of (version) numbers within text.

set sortnumbers

" Maximum number of changes that can be undone.

set undolevels=100

" If you installed the vim.txt help file set vimhelp.
" If would rather use a plain text help file set novimhelp.

set vimhelp

" If you would like to run an executable file when you
" press return on the file name set this.

set norunexec

" Use KiB, MiB, ... instead of KB, MB, ...

set noiec

" Selected color scheme

colorscheme dracula

" The FUSE_HOME directory will be used as a root dir for all FUSE mounts.
" Unless it exists with write/exec permissions set, vifm will attempt to
" create it.

set fusehome=/tmp/vifm_FUSE

" Format for displaying time in file list. For example:
" TIME_STAMP_FORMAT=%m/%d-%H:%M
" See man date or man strftime for details.

set timefmt=%d/%m\ %H:%M

" Show list of matches on tab complition in command-line mode

set wildmenu

" Display completions in a form of popup with descriptions of the matches

set wildstyle=popup

" Ignore case in search patterns unless it contains at least one uppercase
" letter

set ignorecase
set smartcase

" Don't highlight search results automatically

set hlsearch

" Use increment searching (search while typing)
set incsearch

" Try to leave some space from cursor to upper/lower border in lists

set scrolloff=4

" Don't do to much requests to slow file systems

set slowfs=curlftpfs

" Set custom status line look

set statusline="  %t%= %A %10u:%-7g %15s %20d  "

set number
set relativenumber

" :mark mark /full/directory/path [filename]


mark b ~/bin/
mark h ~/
mark m ~/music
mark w /mnt/win

" :com[mand] command_name action
" The following macros can be used in a command
" %a is replaced with the user arguments.
" %c the current file under the cursor.
" %C the current file under the cursor in the other directory.
" %f the current selected file, or files.
" %F the current selected file, or files in the other directory.
" %b same as %f %F.
" %d the current directory name.
" %D the other window directory name.
" %m run the command in a menu window

command mv !mv %f %D
command rm !rm -frI %f
command df df -h %m 2> /dev/null
command diff nvim -d %f %F
command zip zip -r %f.zip %f
command run !! ./%f
command make !!make
command vgrep nvim "+grep %a"
command link ln -s %d/%f %D

" The file type is for the default programs to be used with
" a file extension.
" :filetype pattern1,pattern2 defaultprogram,program2
" :fileviewer pattern1,pattern2 consoleviewer
" The other programs for the file type can be accessed with the :file command
" The command macros %f, %F, %d, %F may be used in the commands.
" The %a macro is ignored.  To use a % you must put %%.

" For automated FUSE mounts, you must register an extension with :file[x]type
" in one of following formats:
"
" :filetype extensions FUSE_MOUNT|some_mount_command using %SOURCE_FILE and %DESTINATION_DIR variables
" %SOURCE_FILE and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.zip,*.jar,*.war,*.ear FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR
"
" :filetype extensions FUSE_MOUNT2|some_mount_command using %PARAM and %DESTINATION_DIR variables
" %PARAM and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.ssh FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR
" %PARAM value is filled from the first line of file (whole line).
" Example first line for SshMount filetype: root@127.0.0.1:/
"
" You can also add %CLEAR if you want to clear screen before running FUSE
" program.

" Pdf
filetype *.pdf
        \ zathura %c %i &,
        \ okular %c %i &,
        \ firefox %c %i &,
        \ apvlv %c,
        \ xpdf %c

" PostScript
filetype *.ps,*.ps.gz,*.eps gv %c %i &

" Djvu
filetype *.djvu
        \ zathura %f &,
        \ okular %f

" Epub
filetype *.epub
        \ zathura %f &,
        \ okular %f

" Audio
" filetype *.wav,*.mp3,*.flac,*.m4a,*.wma,*.ape,*.ac3,*.og[agx],*.spx,*.opus
filetype <audio/*>
        \ {View using cmus}
        \ kitty -e cmus %f &,
        \ {Play using ffplay}
        \ ffplay -nodisp -autoexit %c,
        \ {Play using MPlayer}
        \ mplayer %f,

" Video
filetype <video/*>
        \ {View using vlc}
        \ vlc %c &,
        \ {View using ffplay}
        \ ffplay -fs -autoexit %f &,
        \ {View using Dragon}
        \ dragon %f:p &,
        \ {View using mplayer}
        \ mplayer %f &,
        \ {View using mpv}
        \ mpv %f &,

" Object
filetype *.o nm %f | less

" Man page
filetype *.[1-8] man ./%c
fileviewer *.[1-8] man ./%c | col -b

" Images
filetype <image/*>
    \ {View in vimiv}
    \ vimiv %c &,
    \ {View in gwenview}
    \ gwenview %c &,
    \ {View in feh}
    \ feh --draw-filename --draw-actions --scale-down --geometry 1380x768 %c &,
    \ {View in sxiv}
    \ sxiv -ia %f &,
    \ {View in imv}
    \ imv -b 1D2330 -d %d &,
    \ {View in cacaview}
    \ cacaview %c &,
fileviewer <image/*>
        \ kitty +kitten icat --transfer-mode=file --place=%pwx%ph@%pxx%py %c >/dev/tty </dev/tty %N
        \ %pc
        \ kitty +kitten icat --clear --silent >/dev/tty </dev/tty %N

" MD5
filetype *.md5
       \ {Check MD5 hash sum}
       \ md5sum -c %f,

" SHA1
filetype *.sha1
       \ {Check SHA1 hash sum}
       \ sha1sum -c %f %S,

" SHA256
filetype *.sha256
       \ {Check SHA256 hash sum}
       \ sha256sum -c %f %S,

" SHA512
filetype *.sha512
       \ {Check SHA512 hash sum}
       \ sha512sum -c %f %S,

" GPG signature
filetype *.asc
       \ {Check signature}
       \ !!gpg --verify %c,

" Torrent
filetype *.torrent
        \ transmission %f &,
        \ transmission-gtk %f &
fileviewer *.torrent dumptorrent -v %c

" FuseZipMount
filetype *.zip,*.jar,*.war,*.ea,*.oxt,*.apkgr
       \ {Mount with fuse-zip}
       \ FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR,
       \ {View contents}
       \ zip -sf %c | less,
       \ tar -xf %c,
fileviewer *.zip,*.jar,*.war,*.ear,*.oxt zip -sf %c

" ArchiveMount
filetype *.tar,*.tar.bz2,*.tbz2,*.tgz,*.tar.gz,*.tar.xz,*.txz
       \ {Mount with archivemount}
       \ FUSE_MOUNT|archivemount %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.tgz,*.tar.gz tar -tzf %c
fileviewer *.tar.bz2,*.tbz2 tar -tjf %c
fileviewer *.tar.txz,*.txz xz --list %c
fileviewer *.tar tar -tf %c

" Rar2FsMount
filetype *.rar
       \ {Mount with rar2fs}
       \ FUSE_MOUNT|rar2fs %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.rar unrar v %c

" IsoMount
filetype *.iso
       \ {Mount with fuseiso}
       \ FUSE_MOUNT|fuseiso %SOURCE_FILE %DESTINATION_DIR,

" SshMount
filetype *.ssh
       \ {Mount with sshfs}
       \ FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR,

" FtpMount
filetype *.ftp
       \ {Mount with curlftpfs}
       \ FUSE_MOUNT2|curlftpfs -o ftp_port=-,,disable_eprt %PARAM %DESTINATION_DIR,

" Fuse7z
filetype *.7z
       \ {Mount with fuse-7z}
       \ FUSE_MOUNT|fuse-7z %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.7z 7z l %c

" Office files
filetype *.odt,*.doc,*.docx,*.xls,*.xlsx,*.odp,*.ppt,*.pptx libreoffice %f &
fileviewer *.doc catdoc %c
fileviewer *.docx docx2txt.pl %f -

" Qt projects
filetype *.pro qtcreator %f &

" Directories
filetype */
        \ {View in thunar}
        \ Thunar %f &,
fileview .*/,*/ tree %f

" Astah uml files
filetype *.asta
        \ astah-uml %f &
" Open all other files with default system programs (you can also remove all
" :file[x]type commands above to ensure they don't interfere with system-wide
" settings).  By default all unknown files are opened with 'vi[x]cmd'
" uncommenting one of lines below will result in ignoring 'vi[x]cmd' option
" for unknown file types.
" For *nix:
" filetype * xdg-open
" For OS X:
" filetype * open
" For Windows:
" filetype * start, explorer

" What should be saved automatically between vifm runs
" Like in previous versions of vifm
" set vifminfo=options,filetypes,commands,bookmarks,dhistory,state,cs
" Like in vi
set vifminfo=dhistory,savedirs,chistory,state,tui,shistory,
    \phistory,fhistory,dirstack,registers,bookmarks

" Sample mappings
nnoremap ; :
vnoremap ; :
nnoremap - $
" Escape in command mode
cnoremap jj <c-c>
" Escape in visual mode
vnoremap <space><space> <esc>
" Scroll the viewport faster
nnoremap J <C-e><C-e><C-e>
nnoremap K <C-y><C-y><C-y>
vnoremap J <C-e><C-e><C-e>
vnoremap K <C-y><C-y><C-y>
" Select all
nnoremap <c-a> ggVG
nnoremap = :cd %D<cr>
" New Buffer
nnoremap <silent> <c-t> :tabnew<CR>
" Close Buffer
nnoremap <silent> <c-w> :tabclose<CR>

nmap s :shell<cr>
nmap S :sort<cr>
nmap w :view<cr>

" Open file in the background using its default program
nmap gb :file &<cr>l

" Yank current directory path into the clipboard
nmap yd :!echo %d | xclip -selection clipboard %i<cr>

" Yank current file path into the clipboard
nmap yf :!echo %c:p | xclip -selection clipboard %i<cr>

" Mappings for faster renaming
nmap I cw<c-a>
nmap cc cw<c-u>
nmap A cw<c-w>

" Opening console in current directory
nmap ,t :!kitty &<cr>
nmap <f4> :!kitty &<cr>

" Opening nvim in current directory
nmap <f5> :!kitty --class nvim -e nvim &<cr>
" nmap <f5> :!nvim<cr>

" Opening vim to edit .vifmrc
nmap ,c :execute ':!nvim $MYVIFMRC' | restart<cr>
" Opening gvim to edit .vifmrc
nmap ,C :!nvim-qt --remote-tab-silent $MYVIFMRC &<cr>

" Toggle wrap setting on ,w key
nmap ,w :set wrap!<cr>

" Example of standard two-panel file managers mappings
nmap <f3> :edit<cr>
nmap <c-c> :copy<cr>
vmap <c-c> :copy<cr>
nmap <c-x> :move<cr>
vmap <c-x> :move<cr>
nmap <f10> :mkdir<space>
nmap <c-n> :touch<space>

source '~/.config/vifm/devicons'
